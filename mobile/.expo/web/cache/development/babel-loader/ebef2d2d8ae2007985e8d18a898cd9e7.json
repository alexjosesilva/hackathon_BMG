{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/alexsilva/Documentos/Hackathon-BMG/git/hackathon_BMG/mobile/src/pages/Home/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from \"../Duda/node_modules/@react-navigation/native\";\nimport styles from \"./style\";\nimport logoImg from \"../assets/logo.png\";\nimport api from \"../../services/api\";\nexport default function Home() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  function loadIncidents() {\n    var response;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(loading == true)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && incidents.length == total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('incidents', {\n              params: {\n                page: page\n              }\n            }));\n\n          case 7:\n            response = _context.sent;\n            setIncidents([].concat(_toConsumableArray(incidents), _toConsumableArray(response.data)));\n            setTotal(response.headers['x-total-count']);\n            setPage(page + 1);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadIncidents();\n  }, []);\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 30\n    }\n  }, total, \" casos\"), \".\")), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Bem vindo!\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Escolha um dos casos abaixo e salve o dia.\"), React.createElement(FlatList, {\n    style: styles.incidentList,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    showsVerticalScrollIndicator: false,\n    data: incidents,\n    onEndReached: loadIncidents,\n    onEndReachedThreshold: 0.2,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, \"Caso:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, incident.description), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, \"Valor:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return navigateToDetail(incident);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: '#e02041',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/alexsilva/Documentos/Hackathon-BMG/git/hackathon_BMG/mobile/src/pages/Home/index.js"],"names":["React","useEffect","useState","Feather","useNavigation","styles","logoImg","api","Home","navigation","incidents","setIncidents","total","setTotal","page","setPage","loading","setLoading","loadIncidents","length","get","params","response","data","headers","navigateToDetail","incident","navigate","container","header","headerText","headerTextBold","title","description","incidentList","String","id","item","incidentProperty","incidentValue","Intl","NumberFormat","style","currency","format","value","detailsButton","detailsButtonText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Image, FlatList, Text, TouchableOpacity } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '../Duda/node_modules/@react-navigation/native'\n\nimport styles from './style';\nimport logoImg from '../assets/logo.png';\nimport api from '../../services/api';\n\nexport default function Home() {\n    const navigation = useNavigation();\n    const [incidents, setIncidents] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n    const [loading, setLoading] = useState(false);\n\n    async function loadIncidents() {\n        if(loading == true) {\n            return;\n        }\n\n        if(total > 0 && incidents.length == total) {\n            return;\n        }\n\n        setLoading(true);\n\n        const response = await api.get('incidents', {\n            params: { page }\n        });\n        setIncidents([...incidents, ...response.data]);\n        setTotal(response.headers['x-total-count']);\n        setPage(page + 1);\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        loadIncidents();\n    }, []);\n\n    function navigateToDetail(incident) {\n        navigation.navigate('Detail', { incident });\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Image source={logoImg} />\n                <Text style={styles.headerText}>\n                    Total de <Text style={styles.headerTextBold}>{total} casos</Text>.\n                </Text>\n            </View>\n\n            <Text style={styles.title}>Bem vindo!</Text>\n            <Text style={styles.description}>Escolha um dos casos abaixo e salve o dia.</Text>\n\n            <FlatList\n                style={styles.incidentList}\n                keyExtractor={incident => String(incident.id)}\n                showsVerticalScrollIndicator={false}\n                data={incidents}\n                onEndReached={loadIncidents}\n                onEndReachedThreshold={0.2}\n                renderItem={({ item: incident }) => (\n                    <View>\n                        <View style={styles.incident}>\n                            <Text style={styles.incidentProperty}>ONG:</Text>\n                            <Text style={styles.incidentValue}>{incident.title}</Text>\n                            <Text style={styles.incidentProperty}>Caso:</Text>\n                            <Text style={styles.incidentValue}>{incident.description}</Text>\n                            <Text style={styles.incidentProperty}>Valor:</Text>\n                            <Text style={styles.incidentValue}>{Intl.NumberFormat('pt-BR', {\n                                style: 'currency', currency: 'BRL' }).format(incident.value)}\n                            </Text>\n\n                            <TouchableOpacity style={styles.detailsButton}\n                                onPress={() => navigateToDetail(incident)}>\n                                <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\n                                <Feather name=\"arrow-right\" size={16} color={'#e02041'}/>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                )}\n            />\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}